
void *mlx;
void *win;
void *img;
int width, height;

mlx = mlx_init();
win = mlx_new_window(mlx, WINDOW_WIDTH, WINDOW_HEIGHT, "My Window");

img = mlx_xpm_file_to_image(mlx, "./path_to_file/image.xpm", &width, &height);
if (img == NULL) {
    // Handle error here
}



int bits_per_pixel;
int size_line;
int endian;
char *image_data = mlx_get_data_addr(img, &bits_per_pixel, &size_line, &endian);



for (int y = 0; y < height; y++) {
    for (int x = 0; x < width; x++) {
        // Calculate the index of the current pixel
        int pixel_index = (y * size_line) + (x * (bits_per_pixel / 8));
        
        // Retrieve the color components of the pixel
        unsigned char red = image_data[pixel_index];
        unsigned char green = image_data[pixel_index + 1];
        unsigned char blue = image_data[pixel_index + 2];
        
        // Check if the pixel is non-magenta
        if (red != 255 || green != 0 || blue != 255) {
            // Draw the pixel using mlx_pixel_put
            mlx_pixel_put(mlx, win, x, y, mlx_get_color_value(mlx, red, green, blue));
        }
    }
}
i

#include <mlx.h>

#define WINDOW_WIDTH 800
#define WINDOW_HEIGHT 600

int main()
{
    void *mlx;
    void *win;
    void *img;
    int width, height;

    mlx = mlx_init();
    win = mlx_new_window(mlx, WINDOW_WIDTH, WINDOW_HEIGHT, "My Window");

    img = mlx_xpm_file_to_image(mlx, "./path_to_file/image.xpm", &width, &height);
    if (img == NULL)
    {
        // Handle error here
        return 1;
    }

    int bits_per_pixel;
    int size_line;
    int endian;
    char *image_data = mlx_get_data_addr(img, &bits_per_pixel, &size_line, &endian);

    for (int y = 0; y < height; y++)
    {
        for (int x = 0; x < width; x++)
        {
            int pixel_index = (y * size_line) + (x * (bits_per_pixel / 8));
            unsigned char red = image_data[pixel_index];
            unsigned char green = image_data[pixel_index + 1];
            unsigned char blue = image_data[pixel_index + 2];

            if (red != 255 || green != 0 || blue != 255)
            {
                mlx_pixel_put(mlx, win, x, y, mlx_get_color_value(mlx, red, green, blue));
            }
        }
    }

    mlx_loop(mlx);

    return 0;
}

